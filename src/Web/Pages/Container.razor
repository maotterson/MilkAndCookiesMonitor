@page "/container/{name}"
@using MilkAndCookiesBlazor.Web.Components.Containers
@inject IContainerRegistryService containerRegistryService
@if(containerService is null)
{
    <p>Container with the name @name not found.</p>
}
else
{
    <h3>Container Info</h3>
    <ContainerSummary
        Service="@containerService"
    />
    @switch (settings.ContainerType)
    {
        case EValidContainer.MONGO:
            <MongoContainer Service="(MongoContainerService)containerService"/>
            break;
        default:
            <p>Invalid container type.</p>
            break;

    }
}


@code {
    [Parameter]
    public string? name { get; set; }
    private IContainerService? containerService = null;
    private IContainerSettings settings => containerService.GetSettings();

    protected override void OnInitialized()
    {
        if (name is null) return;
        containerService = containerRegistryService.GetServiceByContainerName(name);
    }
}
